name: Create Release for SalesforcePR

on:
  push:
    branches:
      - main # Trigger on push (after PR merge) to main branch

env:
  ASSET_NAME: salesforce-package
  VERSION: '1.0.0' # Replace with dynamic versioning if needed

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Prepare Files for Archive
        run: |
          mkdir -p archive
          cp -r src manifest archive/ # Adjust based on your repo structure
          zip -r ${{ env.ASSET_NAME }}.zip ./archive
          ls -lh ${{ env.ASSET_NAME }}.zip

      - name: Determine Target Environment
        id: env_branch
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "env=PROD" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "env=DEV" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/uat" ]]; then
            echo "env=UAT" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}-${{ github.run_number }}-${{ env.env }}
          release_name: ${{ env.VERSION }}.${{ github.run_number }} (${{ env.env }})
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ASSET_NAME }}.zip
          asset_name: ${{ env.ASSET_NAME }}-${{ env.env }}.zip
          asset_content_type: application/zip
